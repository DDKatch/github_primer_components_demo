{
  "version": 3,
  "sources": ["../src/events.ts", "../src/popover-helpers.ts", "../src/popover.ts", "../src/index.ts"],
  "sourcesContent": ["export interface ToggleInit extends EventInit {\n  oldState: string;\n  newState: string;\n}\n\nexport class ToggleEvent extends Event {\n  public oldState: string;\n  public newState: string;\n  constructor(\n    type: string,\n    { oldState = '', newState = '', ...init }: Partial<ToggleInit> = {},\n  ) {\n    super(type, init);\n    this.oldState = String(oldState || '');\n    this.newState = String(newState || '');\n  }\n}\n\nconst popoverToggleTaskQueue = new WeakMap<HTMLElement, unknown>();\nexport function queuePopoverToggleEventTask(\n  element: HTMLElement,\n  oldState: string,\n  newState: string,\n) {\n  popoverToggleTaskQueue.set(\n    element,\n    setTimeout(() => {\n      if (!popoverToggleTaskQueue.has(element)) return;\n      element.dispatchEvent(\n        new ToggleEvent('toggle', {\n          cancelable: false,\n          oldState,\n          newState,\n        }),\n      );\n    }, 0),\n  );\n}\n", "import { queuePopoverToggleEventTask, ToggleEvent } from './events.js';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst ShadowRoot = globalThis.ShadowRoot || function () {};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst HTMLDialogElement = globalThis.HTMLDialogElement || function () {};\n\nconst topLayerElements = new WeakMap<Document, Set<HTMLElement>>();\nconst autoPopoverList = new WeakMap<Document, Set<HTMLElement>>();\nexport const visibilityState = new WeakMap<HTMLElement, 'hidden' | 'showing'>();\nfunction getPopoverVisibilityState(popover: HTMLElement): 'hidden' | 'showing' {\n  return visibilityState.get(popover) || 'hidden';\n}\n\nconst popoverInvoker = new WeakMap<\n  HTMLElement,\n  HTMLButtonElement | HTMLInputElement\n>();\n\n// https://html.spec.whatwg.org/#popover-target-attribute-activation-behavior\nexport function popoverTargetAttributeActivationBehavior(\n  element: HTMLButtonElement | HTMLInputElement,\n) {\n  const popover = element.popoverTargetElement;\n  if (!popover) {\n    return;\n  }\n  const visibility = getPopoverVisibilityState(popover);\n  if (element.popoverTargetAction === 'show' && visibility === 'showing') {\n    return;\n  }\n  if (element.popoverTargetAction === 'hide' && visibility === 'hidden') return;\n  if (visibility === 'showing') {\n    hidePopover(popover, true, true);\n  } else if (checkPopoverValidity(popover, false)) {\n    popoverInvoker.set(popover, element);\n    showPopover(popover);\n  }\n}\n\n// https://whatpr.org/html/8221/popover.html#check-popover-validity\nfunction checkPopoverValidity(\n  element: HTMLElement,\n  expectedToBeShowing: boolean,\n) {\n  if (element.popover !== 'auto' && element.popover !== 'manual') {\n    return false;\n  }\n  if (!element.isConnected) return false;\n  if (expectedToBeShowing && getPopoverVisibilityState(element) !== 'showing') {\n    return false;\n  }\n  if (!expectedToBeShowing && getPopoverVisibilityState(element) !== 'hidden') {\n    return false;\n  }\n  if (element instanceof HTMLDialogElement && element.hasAttribute('open')) {\n    return false;\n  }\n  if (document.fullscreenElement === element) return false;\n  return true;\n}\n\nfunction getStackPosition(popover?: Element) {\n  if (!popover) return 0;\n  return (\n    Array.from(autoPopoverList.get(popover.ownerDocument) || []).indexOf(\n      popover as HTMLElement,\n    ) + 1\n  );\n}\n\nfunction topMostClickedPopover(target: HTMLElement) {\n  const clickedPopover = nearestInclusiveOpenPopover(target);\n  const invokerPopover = nearestInclusiveTargetPopoverForInvoker(target);\n  if (getStackPosition(clickedPopover) > getStackPosition(invokerPopover)) {\n    return clickedPopover;\n  }\n  return invokerPopover;\n}\n\n// https://html.spec.whatwg.org/#topmost-auto-popover\nfunction topMostAutoPopover(document: Document): HTMLElement | null {\n  const documentPopovers = autoPopoverList.get(document);\n  for (const popover of documentPopovers || []) {\n    if (!popover.isConnected) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      documentPopovers!.delete(popover);\n    } else {\n      return popover;\n    }\n  }\n  return null;\n}\n\nexport function getRootNode(node: Node): Node {\n  if (typeof node.getRootNode === 'function') {\n    return node.getRootNode();\n  }\n  if (node.parentNode) return getRootNode(node.parentNode);\n  return node;\n}\n\n// https://html.spec.whatwg.org/#nearest-inclusive-open-popover\nfunction nearestInclusiveOpenPopover(\n  node: Node | null,\n): HTMLElement | undefined {\n  while (node) {\n    if (\n      node instanceof HTMLElement &&\n      node.popover === 'auto' &&\n      visibilityState.get(node) === 'showing'\n    ) {\n      return node;\n    }\n    node = node.parentElement || getRootNode(node);\n    if (node instanceof ShadowRoot) node = node.host;\n    if (node instanceof Document) return;\n  }\n}\n\n// https://html.spec.whatwg.org/#popover-light-dismiss:nearest-inclusive-target-popover-for-invoker\nfunction nearestInclusiveTargetPopoverForInvoker(\n  node: Node | null,\n): HTMLElement | undefined {\n  while (node) {\n    const nodePopover = (node as HTMLButtonElement).popoverTargetElement;\n    if (nodePopover) return nodePopover;\n    node = node.parentElement || getRootNode(node);\n    if (node instanceof ShadowRoot) node = node.host;\n    if (node instanceof Document) return;\n  }\n}\n\n// https://html.spec.whatwg.org/#topmost-popover-ancestor\nfunction topMostPopoverAncestor(newPopover: HTMLElement): HTMLElement | null {\n  const popoverPositions = new Map();\n  let i = 0;\n  const document = newPopover.ownerDocument;\n  for (const popover of autoPopoverList.get(document) || []) {\n    popoverPositions.set(popover, i);\n    i += 1;\n  }\n  popoverPositions.set(newPopover, i);\n  i += 1;\n  let topMostPopoverAncestor: HTMLElement | null = null;\n  function checkAncestor(candidate: HTMLElement | null) {\n    const candidateAncestor = nearestInclusiveOpenPopover(candidate);\n    if (candidateAncestor === null) return null;\n    const candidatePosition = popoverPositions.get(candidateAncestor);\n    if (\n      topMostPopoverAncestor === null ||\n      popoverPositions.get(topMostPopoverAncestor) < candidatePosition\n    ) {\n      topMostPopoverAncestor = candidateAncestor as HTMLElement;\n    }\n  }\n  checkAncestor(newPopover?.parentElement as HTMLElement | null);\n  return topMostPopoverAncestor;\n}\n\nfunction isFocusable(focusTarget: HTMLElement) {\n  if (focusTarget.hidden) return false;\n  if (\n    focusTarget instanceof HTMLButtonElement ||\n    focusTarget instanceof HTMLInputElement ||\n    focusTarget instanceof HTMLSelectElement ||\n    focusTarget instanceof HTMLTextAreaElement ||\n    focusTarget instanceof HTMLOptGroupElement ||\n    focusTarget instanceof HTMLOptionElement ||\n    focusTarget instanceof HTMLFieldSetElement\n  ) {\n    if (focusTarget.disabled) return false;\n  }\n  if (\n    focusTarget instanceof HTMLInputElement &&\n    focusTarget.type === 'hidden'\n  ) {\n    return false;\n  }\n  if (focusTarget instanceof HTMLAnchorElement && focusTarget.href === '') {\n    return false;\n  }\n  return focusTarget.tabIndex !== -1;\n}\n\n// https://html.spec.whatwg.org/#focus-delegate\nfunction focusDelegate(focusTarget: HTMLElement) {\n  if (\n    focusTarget.shadowRoot &&\n    focusTarget.shadowRoot.delegatesFocus !== true\n  ) {\n    return null;\n  }\n  let whereToLook: DocumentFragment | HTMLElement = focusTarget;\n  if (whereToLook.shadowRoot) {\n    whereToLook = whereToLook.shadowRoot;\n  }\n  const autoFocusDelegate = whereToLook.querySelector('[autofocus]');\n  if (autoFocusDelegate) {\n    return autoFocusDelegate;\n  }\n  const walker = focusTarget.ownerDocument.createTreeWalker(\n    whereToLook,\n    NodeFilter.SHOW_ELEMENT,\n  );\n  let descendant: Node | null = walker.currentNode;\n  while (descendant) {\n    // TODO: this is not spec compliant\n    if (isFocusable(descendant as HTMLElement)) {\n      return descendant;\n    }\n    descendant = walker.nextNode();\n  }\n}\n\n// https://html.spec.whatwg.org/#popover-focusing-steps\nfunction popoverFocusingSteps(subject: HTMLElement) {\n  (focusDelegate(subject) as HTMLElement)?.focus();\n}\n\nconst previouslyFocusedElements = new WeakMap<HTMLElement, HTMLElement>();\n\n// https://html.spec.whatwg.org/#show-popover\nexport function showPopover(element: HTMLElement) {\n  if (!checkPopoverValidity(element, false)) {\n    return;\n  }\n  const document = element.ownerDocument;\n  if (\n    !element.dispatchEvent(\n      new ToggleEvent('beforetoggle', {\n        cancelable: true,\n        oldState: 'closed',\n        newState: 'open',\n      }),\n    )\n  ) {\n    return;\n  }\n  if (!checkPopoverValidity(element, false)) {\n    return;\n  }\n  let shouldRestoreFocus = false;\n  if (element.popover === 'auto') {\n    const originalType = element.getAttribute('popover');\n    const ancestor = topMostPopoverAncestor(element) || document;\n    hideAllPopoversUntil(ancestor, false, true);\n    if (\n      originalType !== element.getAttribute('popover') ||\n      !checkPopoverValidity(element, false)\n    ) {\n      return;\n    }\n  }\n  if (!topMostAutoPopover(document)) {\n    shouldRestoreFocus = true;\n  }\n  previouslyFocusedElements.delete(element);\n  const originallyFocusedElement = document.activeElement as HTMLElement;\n  element.classList.add(':popover-open');\n  visibilityState.set(element, 'showing');\n  if (!topLayerElements.has(document)) {\n    topLayerElements.set(document, new Set());\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  topLayerElements.get(document)!.add(element);\n  popoverFocusingSteps(element);\n  if (element.popover === 'auto') {\n    if (!autoPopoverList.has(document)) {\n      autoPopoverList.set(document, new Set());\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    autoPopoverList.get(document)!.add(element);\n    setInvokerAriaExpanded(popoverInvoker.get(element), true);\n  }\n  if (\n    shouldRestoreFocus &&\n    originallyFocusedElement &&\n    element.popover === 'auto'\n  ) {\n    previouslyFocusedElements.set(element, originallyFocusedElement);\n  }\n  queuePopoverToggleEventTask(element, 'closed', 'open');\n}\n\n// https://html.spec.whatwg.org/#hide-popover\nexport function hidePopover(\n  element: HTMLElement,\n  focusPreviousElement = false,\n  fireEvents = false,\n) {\n  // https://whatpr.org/html/8221/popover.html#hide-popover\n  if (!checkPopoverValidity(element, true)) {\n    return;\n  }\n  const document = element.ownerDocument;\n  if (element.popover === 'auto') {\n    hideAllPopoversUntil(element, focusPreviousElement, fireEvents);\n    if (!checkPopoverValidity(element, true)) {\n      return;\n    }\n  }\n  setInvokerAriaExpanded(popoverInvoker.get(element), false);\n  popoverInvoker.delete(element);\n  if (fireEvents) {\n    element.dispatchEvent(\n      new ToggleEvent('beforetoggle', {\n        oldState: 'open',\n        newState: 'closed',\n      }),\n    );\n    if (!checkPopoverValidity(element, true)) {\n      return;\n    }\n  }\n  topLayerElements.get(document)?.delete(element);\n  autoPopoverList.get(document)?.delete(element);\n  element.classList.remove(':popover-open');\n  visibilityState.set(element, 'hidden');\n  if (fireEvents) {\n    queuePopoverToggleEventTask(element, 'open', 'closed');\n  }\n  const previouslyFocusedElement = previouslyFocusedElements.get(element);\n  if (previouslyFocusedElement) {\n    previouslyFocusedElements.delete(element);\n    if (focusPreviousElement) {\n      previouslyFocusedElement.focus();\n    }\n  }\n}\n\nfunction closeAllOpenPopovers(\n  document: Document,\n  focusPreviousElement = false,\n  fireEvents = false,\n) {\n  let popover = topMostAutoPopover(document);\n  while (popover) {\n    hidePopover(popover, focusPreviousElement, fireEvents);\n    popover = topMostAutoPopover(document);\n  }\n}\n\n// https://html.spec.whatwg.org/#hide-all-popovers-until\nexport function hideAllPopoversUntil(\n  endpoint: Element | Document,\n  focusPreviousElement: boolean,\n  fireEvents: boolean,\n) {\n  const document = endpoint.ownerDocument || endpoint;\n  if (endpoint instanceof Document) {\n    return closeAllOpenPopovers(document, focusPreviousElement, fireEvents);\n  }\n  let lastToHide = null;\n  let foundEndpoint = false;\n  for (const popover of autoPopoverList.get(document) || []) {\n    if (popover === endpoint) {\n      foundEndpoint = true;\n    } else if (foundEndpoint) {\n      lastToHide = popover;\n      break;\n    }\n  }\n  if (!foundEndpoint) {\n    return closeAllOpenPopovers(document, focusPreviousElement, fireEvents);\n  }\n  while (\n    lastToHide &&\n    getPopoverVisibilityState(lastToHide) === 'showing' &&\n    autoPopoverList.get(document)?.size\n  ) {\n    hidePopover(lastToHide, focusPreviousElement, fireEvents);\n  }\n}\n\nconst popoverPointerDownTargets = new WeakMap<Document, HTMLElement>();\n// https://html.spec.whatwg.org/#topmost-clicked-popover\nexport function lightDismissOpenPopovers(event: Event) {\n  if (!event.isTrusted) return;\n  // Composed path allows us to find the target within shadowroots\n  const target = event.composedPath()[0] as HTMLElement;\n  if (!target) return;\n  const document = target.ownerDocument;\n  const topMostPopover = topMostAutoPopover(document);\n  if (!topMostPopover) return;\n  const ancestor = topMostClickedPopover(target);\n  if (ancestor && event.type === 'pointerdown') {\n    popoverPointerDownTargets.set(document, ancestor as HTMLElement);\n  } else if (event.type === 'pointerup') {\n    const sameTarget = popoverPointerDownTargets.get(document) === ancestor;\n    popoverPointerDownTargets.delete(document);\n    if (sameTarget) {\n      hideAllPopoversUntil(ancestor || document, false, true);\n    }\n  }\n}\n\nconst initialAriaExpandedValue = new WeakMap<\n  HTMLButtonElement | HTMLInputElement,\n  null | string\n>();\n\nfunction setInvokerAriaExpanded(\n  el?: HTMLButtonElement | HTMLInputElement,\n  force = false,\n) {\n  if (!el) return;\n  if (!initialAriaExpandedValue.has(el)) {\n    initialAriaExpandedValue.set(el, el.getAttribute('aria-expanded'));\n  }\n  const popover = el.popoverTargetElement;\n  if (popover && popover.popover === 'auto') {\n    el.setAttribute('aria-expanded', String(force));\n  } else {\n    const initialValue = initialAriaExpandedValue.get(el);\n    if (!initialValue) {\n      el.removeAttribute('aria-expanded');\n    } else {\n      el.setAttribute('aria-expanded', initialValue);\n    }\n  }\n}\n", "import { ToggleEvent } from './events.js';\nimport {\n  getRootNode,\n  hideAllPopoversUntil,\n  hidePopover,\n  lightDismissOpenPopovers,\n  popoverTargetAttributeActivationBehavior,\n  showPopover,\n  visibilityState,\n} from './popover-helpers.js';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst ShadowRoot = globalThis.ShadowRoot || function () {};\n\nexport function isSupported() {\n  return (\n    typeof HTMLElement !== 'undefined' &&\n    typeof HTMLElement.prototype === 'object' &&\n    'popover' in HTMLElement.prototype\n  );\n}\n\nfunction patchSelectorFn<K extends string>(\n  object: Record<PropertyKey & K, unknown>,\n  name: K,\n  mapper: (selector: string) => string,\n) {\n  const original = object[name] as (selectors: string) => NodeList;\n  Object.defineProperty(object, name, {\n    value(selector: string) {\n      return original.call(this, mapper(selector));\n    },\n  });\n}\n\nconst nonEscapedPopoverSelector = /(^|[^\\\\]):popover-open\\b/g;\n\nexport function apply() {\n  window.ToggleEvent = window.ToggleEvent || ToggleEvent;\n\n  function rewriteSelector(selector: string) {\n    if (selector?.includes(':popover-open')) {\n      selector = selector.replace(\n        nonEscapedPopoverSelector,\n        '$1.\\\\:popover-open',\n      );\n    }\n    return selector;\n  }\n\n  patchSelectorFn(Document.prototype, 'querySelector', rewriteSelector);\n  patchSelectorFn(Document.prototype, 'querySelectorAll', rewriteSelector);\n  patchSelectorFn(Element.prototype, 'querySelector', rewriteSelector);\n  patchSelectorFn(Element.prototype, 'querySelectorAll', rewriteSelector);\n  patchSelectorFn(Element.prototype, 'matches', rewriteSelector);\n  patchSelectorFn(Element.prototype, 'closest', rewriteSelector);\n  patchSelectorFn(\n    DocumentFragment.prototype,\n    'querySelectorAll',\n    rewriteSelector,\n  );\n  patchSelectorFn(\n    DocumentFragment.prototype,\n    'querySelectorAll',\n    rewriteSelector,\n  );\n\n  Object.defineProperties(HTMLElement.prototype, {\n    popover: {\n      enumerable: true,\n      configurable: true,\n      get() {\n        if (!this.hasAttribute('popover')) return null;\n        const value = (this.getAttribute('popover') || '').toLowerCase();\n        if (value === '' || value == 'auto') return 'auto';\n        return 'manual';\n      },\n      set(value) {\n        this.setAttribute('popover', value);\n      },\n    },\n\n    showPopover: {\n      enumerable: true,\n      configurable: true,\n      value() {\n        showPopover(this);\n      },\n    },\n\n    hidePopover: {\n      enumerable: true,\n      configurable: true,\n      value() {\n        hidePopover(this, true, true);\n      },\n    },\n\n    togglePopover: {\n      enumerable: true,\n      configurable: true,\n      value(force: boolean) {\n        if (\n          (visibilityState.get(this) === 'showing' && force === undefined) ||\n          force === false\n        ) {\n          hidePopover(this, true, true);\n        } else if (force === undefined || force === true) {\n          showPopover(this);\n        }\n      },\n    },\n  });\n\n  const popoverTargetAssociatedElements = new WeakMap<Element, Element>();\n  function applyPopoverInvokerElementMixin(ElementClass: typeof HTMLElement) {\n    Object.defineProperties(ElementClass.prototype, {\n      popoverTargetElement: {\n        enumerable: true,\n        configurable: true,\n        set(targetElement: unknown) {\n          if (targetElement === null) {\n            this.removeAttribute('popovertarget');\n            popoverTargetAssociatedElements.delete(this);\n          } else if (!(targetElement instanceof Element)) {\n            throw new TypeError(\n              `popoverTargetElement must be an element or null`,\n            );\n          } else {\n            this.setAttribute('popovertarget', '');\n            popoverTargetAssociatedElements.set(this, targetElement);\n          }\n        },\n        get() {\n          if (this.localName !== 'button' && this.localName !== 'input') {\n            return null;\n          }\n          if (\n            this.localName === 'input' &&\n            this.type !== 'reset' &&\n            this.type !== 'image' &&\n            this.type !== 'button'\n          ) {\n            return null;\n          }\n          if (this.disabled) {\n            return null;\n          }\n          if (this.form && this.type === 'submit') {\n            return null;\n          }\n          const targetElement = popoverTargetAssociatedElements.get(this);\n          if (targetElement && targetElement.isConnected) {\n            return targetElement;\n          } else if (targetElement && !targetElement.isConnected) {\n            popoverTargetAssociatedElements.delete(this);\n            return null;\n          }\n          const root = getRootNode(this);\n          const idref = this.getAttribute('popovertarget');\n          if (\n            (root instanceof Document || root instanceof ShadowRoot) &&\n            idref\n          ) {\n            return root.getElementById(idref) || null;\n          }\n          return null;\n        },\n      },\n      popoverTargetAction: {\n        enumerable: true,\n        configurable: true,\n        get() {\n          const value = (\n            this.getAttribute('popovertargetaction') || ''\n          ).toLowerCase();\n          if (value === 'show' || value === 'hide') return value;\n          return 'toggle';\n        },\n        set(value) {\n          this.setAttribute('popovertargetaction', value);\n        },\n      },\n    });\n  }\n\n  applyPopoverInvokerElementMixin(HTMLButtonElement);\n  applyPopoverInvokerElementMixin(HTMLInputElement);\n\n  const handleInvokerActivation = (event: Event) => {\n    if (!event.isTrusted) return;\n    // Composed path allows us to find the target within shadowroots\n    const target = event.composedPath()[0] as HTMLElement;\n    if (!(target instanceof Element) || target?.shadowRoot) {\n      return;\n    }\n    const root = getRootNode(target);\n    if (!(root instanceof ShadowRoot || root instanceof Document)) {\n      return;\n    }\n    const invoker = target.closest('[popovertargetaction],[popovertarget]');\n    if (invoker) {\n      popoverTargetAttributeActivationBehavior(invoker as HTMLButtonElement);\n      return;\n    }\n  };\n\n  const onKeydown = (event: Event) => {\n    const key = (event as KeyboardEvent).key;\n    const target = event.target as Element;\n    if (target && (key === 'Escape' || key === 'Esc')) {\n      hideAllPopoversUntil(target.ownerDocument, true, true);\n    }\n  };\n\n  const addEventListeners = (root: Document | ShadowRoot) => {\n    root.addEventListener('click', handleInvokerActivation);\n    root.addEventListener('keydown', onKeydown);\n    root.addEventListener('pointerdown', lightDismissOpenPopovers);\n    root.addEventListener('pointerup', lightDismissOpenPopovers);\n  };\n\n  addEventListeners(document);\n}\n", "import { apply, isSupported } from './popover.js';\n\ninterface PopoverToggleTargetElementInvoker {\n  popoverTargetElement: HTMLElement | null;\n  popoverTargetAction: 'toggle' | 'show' | 'hide';\n}\n\ndeclare global {\n  interface ToggleEvent extends Event {\n    oldState: string;\n    newState: string;\n  }\n  interface HTMLElement {\n    popover: 'auto' | 'manual' | null;\n    showPopover(): void;\n    hidePopover(): void;\n    togglePopover(): void;\n  }\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  interface HTMLButtonElement extends PopoverToggleTargetElementInvoker {}\n  interface HTMLInputElement extends PopoverToggleTargetElementInvoker {}\n  /* eslint-enable @typescript-eslint/no-empty-interface */\n  interface Window {\n    ToggleEvent: ToggleEvent;\n  }\n}\n\nif (!isSupported()) apply();\n"],
  "mappings": "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",
  "names": ["ToggleEvent", "type", "oldState", "newState", "init", "popoverToggleTaskQueue", "queuePopoverToggleEventTask", "element", "ShadowRoot", "HTMLDialogElement", "topLayerElements", "autoPopoverList", "visibilityState", "getPopoverVisibilityState", "popover", "popoverInvoker", "popoverTargetAttributeActivationBehavior", "element", "visibility", "hidePopover", "checkPopoverValidity", "showPopover", "expectedToBeShowing", "getStackPosition", "topMostClickedPopover", "target", "clickedPopover", "nearestInclusiveOpenPopover", "invokerPopover", "nearestInclusiveTargetPopoverForInvoker", "topMostAutoPopover", "document", "documentPopovers", "getRootNode", "node", "nodePopover", "topMostPopoverAncestor", "newPopover", "popoverPositions", "i", "checkAncestor", "candidate", "candidateAncestor", "candidatePosition", "isFocusable", "focusTarget", "focusDelegate", "whereToLook", "autoFocusDelegate", "walker", "descendant", "popoverFocusingSteps", "subject", "previouslyFocusedElements", "ToggleEvent", "shouldRestoreFocus", "originalType", "ancestor", "hideAllPopoversUntil", "originallyFocusedElement", "setInvokerAriaExpanded", "queuePopoverToggleEventTask", "focusPreviousElement", "fireEvents", "previouslyFocusedElement", "closeAllOpenPopovers", "endpoint", "lastToHide", "foundEndpoint", "popoverPointerDownTargets", "lightDismissOpenPopovers", "event", "sameTarget", "initialAriaExpandedValue", "el", "force", "initialValue", "ShadowRoot", "isSupported", "patchSelectorFn", "object", "name", "mapper", "original", "selector", "nonEscapedPopoverSelector", "apply", "ToggleEvent", "rewriteSelector", "value", "showPopover", "hidePopover", "force", "visibilityState", "popoverTargetAssociatedElements", "applyPopoverInvokerElementMixin", "ElementClass", "targetElement", "root", "getRootNode", "idref", "handleInvokerActivation", "event", "target", "invoker", "popoverTargetAttributeActivationBehavior", "onKeydown", "key", "hideAllPopoversUntil", "lightDismissOpenPopovers", "isSupported", "apply"]
}
